"""Add analysis history and global edit functionality

Revision ID: d731b48adffd
Revises: 202083c01b3d
Create Date: 2025-06-06 16:20:23.325720+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd731b48adffd'
down_revision: Union[str, None] = '202083c01b3d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('verse_words')
    op.drop_index('ix_user_progress_id', table_name='user_progress')
    op.drop_table('user_progress')
    op.drop_index('ix_audio_recordings_id', table_name='audio_recordings')
    op.drop_table('audio_recordings')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    op.drop_table('word_relationships')
    op.drop_index('ix_books_id', table_name='books')
    op.drop_index('ix_books_latin_name', table_name='books')
    op.drop_index('ix_books_name', table_name='books')
    op.drop_table('books')
    op.drop_index('ix_words_id', table_name='words')
    op.drop_index('ix_words_latin_text', table_name='words')
    op.drop_table('words')
    op.drop_index('ix_verses_id', table_name='verses')
    op.drop_table('verses')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('verses',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('book_id', sa.INTEGER(), nullable=True),
    sa.Column('chapter', sa.INTEGER(), nullable=True),
    sa.Column('verse_number', sa.INTEGER(), nullable=True),
    sa.Column('text', sa.TEXT(), nullable=True),
    sa.Column('translation', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_verses_id', 'verses', ['id'], unique=False)
    op.create_table('words',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('latin_text', sa.VARCHAR(length=100), nullable=True),
    sa.Column('dictionary_entry', sa.TEXT(), nullable=True),
    sa.Column('frequency', sa.INTEGER(), nullable=True),
    sa.Column('difficulty_level', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_words_latin_text', 'words', ['latin_text'], unique=False)
    op.create_index('ix_words_id', 'words', ['id'], unique=False)
    op.create_table('books',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=True),
    sa.Column('latin_name', sa.VARCHAR(length=100), nullable=True),
    sa.Column('chapter_count', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_books_name', 'books', ['name'], unique=False)
    op.create_index('ix_books_latin_name', 'books', ['latin_name'], unique=False)
    op.create_index('ix_books_id', 'books', ['id'], unique=False)
    op.create_table('word_relationships',
    sa.Column('word_id', sa.INTEGER(), nullable=False),
    sa.Column('related_word_id', sa.INTEGER(), nullable=False),
    sa.Column('relationship_type', sa.VARCHAR(length=50), nullable=True),
    sa.ForeignKeyConstraint(['related_word_id'], ['words.id'], ),
    sa.ForeignKeyConstraint(['word_id'], ['words.id'], ),
    sa.PrimaryKeyConstraint('word_id', 'related_word_id')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(length=255), nullable=True),
    sa.Column('is_active', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    op.create_table('audio_recordings',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('file_path', sa.VARCHAR(length=255), nullable=True),
    sa.Column('duration', sa.FLOAT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('verse_id', sa.INTEGER(), nullable=True),
    sa.Column('word_id', sa.INTEGER(), nullable=True),
    sa.Column('recording_type', sa.VARCHAR(length=50), nullable=True),
    sa.Column('quality_rating', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['verse_id'], ['verses.id'], ),
    sa.ForeignKeyConstraint(['word_id'], ['words.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_audio_recordings_id', 'audio_recordings', ['id'], unique=False)
    op.create_table('user_progress',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('word_id', sa.INTEGER(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('proficiency_level', sa.INTEGER(), nullable=True),
    sa.Column('last_reviewed', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('review_count', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['word_id'], ['words.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_user_progress_id', 'user_progress', ['id'], unique=False)
    op.create_table('verse_words',
    sa.Column('verse_id', sa.INTEGER(), nullable=False),
    sa.Column('word_id', sa.INTEGER(), nullable=False),
    sa.Column('position', sa.INTEGER(), nullable=True),
    sa.Column('is_highlighted', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['verse_id'], ['verses.id'], ),
    sa.ForeignKeyConstraint(['word_id'], ['words.id'], ),
    sa.PrimaryKeyConstraint('verse_id', 'word_id')
    )
    # ### end Alembic commands ###
